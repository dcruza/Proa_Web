//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Proa_DA
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Proa_Entities : DbContext
    {
        public Proa_Entities()
            : base("name=Proa_Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<paciente> paciente { get; set; }
        public virtual DbSet<telefonoPaciente> telefonoPaciente { get; set; }
        public virtual DbSet<tipoTelefono> tipoTelefono { get; set; }
        public virtual DbSet<vw_CIE104D> vw_CIE104D { get; set; }
        public virtual DbSet<vw_SERVICIOS_POR_CENTRO> vw_SERVICIOS_POR_CENTRO { get; set; }
        public virtual DbSet<estanciaPaciente> estanciaPaciente { get; set; }
        public virtual DbSet<vw_Estancia> vw_Estancia { get; set; }
        public virtual DbSet<antimicrobiano> antimicrobiano { get; set; }
        public virtual DbSet<aplicaAntimicrobiano> aplicaAntimicrobiano { get; set; }
        public virtual DbSet<aplicaAntimicrobianoGermen> aplicaAntimicrobianoGermen { get; set; }
        public virtual DbSet<aplicaAntimicrobianoSeguim> aplicaAntimicrobianoSeguim { get; set; }
        public virtual DbSet<estadoAplicaAntimicrobiano> estadoAplicaAntimicrobiano { get; set; }
        public virtual DbSet<estadoPaciente> estadoPaciente { get; set; }
        public virtual DbSet<germen> germen { get; set; }
        public virtual DbSet<motivoSuspension> motivoSuspension { get; set; }
        public virtual DbSet<periodo> periodo { get; set; }
        public virtual DbSet<via> via { get; set; }
    
        public virtual ObjectResult<sp_BuscarPacienteProa_Result> sp_BuscarPacienteProa(string id, string nombre, string apel1, string apel2)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apel1Parameter = apel1 != null ?
                new ObjectParameter("apel1", apel1) :
                new ObjectParameter("apel1", typeof(string));
    
            var apel2Parameter = apel2 != null ?
                new ObjectParameter("apel2", apel2) :
                new ObjectParameter("apel2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BuscarPacienteProa_Result>("sp_BuscarPacienteProa", idParameter, nombreParameter, apel1Parameter, apel2Parameter);
        }
    
        public virtual ObjectResult<sp_BuscarPacienteARCAMEDISYS_Result> sp_BuscarPacienteARCAMEDISYS(string id, string nombre, string apel1, string apel2)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apel1Parameter = apel1 != null ?
                new ObjectParameter("apel1", apel1) :
                new ObjectParameter("apel1", typeof(string));
    
            var apel2Parameter = apel2 != null ?
                new ObjectParameter("apel2", apel2) :
                new ObjectParameter("apel2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BuscarPacienteARCAMEDISYS_Result>("sp_BuscarPacienteARCAMEDISYS", idParameter, nombreParameter, apel1Parameter, apel2Parameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<sp_lista_Estancias_x_Id_Result> sp_lista_Estancias_x_Id(string id, string ccm)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var ccmParameter = ccm != null ?
                new ObjectParameter("ccm", ccm) :
                new ObjectParameter("ccm", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_lista_Estancias_x_Id_Result>("sp_lista_Estancias_x_Id", idParameter, ccmParameter);
        }
    
        public virtual ObjectResult<sp_lista_Estancias_x_Serv_Espec_Result> sp_lista_Estancias_x_Serv_Espec(string codServ, string codEspec, string ccm)
        {
            var codServParameter = codServ != null ?
                new ObjectParameter("codServ", codServ) :
                new ObjectParameter("codServ", typeof(string));
    
            var codEspecParameter = codEspec != null ?
                new ObjectParameter("codEspec", codEspec) :
                new ObjectParameter("codEspec", typeof(string));
    
            var ccmParameter = ccm != null ?
                new ObjectParameter("ccm", ccm) :
                new ObjectParameter("ccm", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_lista_Estancias_x_Serv_Espec_Result>("sp_lista_Estancias_x_Serv_Espec", codServParameter, codEspecParameter, ccmParameter);
        }
    }
}
